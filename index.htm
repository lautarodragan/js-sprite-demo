<html>
	<head>
		<title>Javascript Canvas &ans; Walking Pikachu</title>
		<script>
			var canvas, context;
			var imgSprite = new Image(), imgBackground = new Image();
			var direction = 0, frame = 0;
			var intervalId;
			var spriteW = 32, spriteH = 32;
			var zoom = 2;
			var walking = false;
			var x = 0, y = 0;
			var speed = 5;

			imgSprite.src = "pikachu.png";
			imgBackground.src = "background.png";

			window.onload = function() {
				canvas = document.getElementById("myCanvas");
				context = canvas.getContext("2d");

				if (imgSprite.complete) {
					init();
				} else {
					imgSprite.addEventListener('load', function() {
						init();
					});
				}
			};

			window.onkeydown = function(key) {
				console.log("keydown", key, key.keyCode);
				
				var keys = [37, 38, 39, 40];

				if (keys.indexOf(key.keyCode) != -1) {
					walking = true;
					direction = [1, 3, 2, 0][keys.indexOf(key.keyCode)];
				}

			}

			window.onkeyup = function(key) {
				console.log("keyup", key, key.keyCode);
				if (direction == [1, 3, 2, 0][key.keyCode - 37])
					walking = false;
			}

			function init() {
				intervalId = setInterval(draw, 30);
			};

			function draw() {
				context.clearRect(0, 0, canvas.width, canvas.height);

				var spriteOffsetX = spriteW * 3;
				var imageFrame = 1;

				if (walking) {
					walk();
					nextFrame();
				} else {
					frame = 0;
				}

				var imageFrame = getClippedFrame(Math.round(frame));

				if (imgBackground.complete)
					context.drawImage(imgBackground, 0, 0);

				context.drawImage(imgSprite, spriteOffsetX + imageFrame * spriteW, direction * spriteH, spriteW, spriteH, x, y, spriteW * zoom, spriteH * zoom);

			}

			function nextFrame() {
				if (frame < 3)
					frame += .3;
				else
					frame = 0;
			}

			function walk() {

				var left = function() { x -= speed };
				var right = function() { x += speed };
				var up = function() { y -= speed };
				var down = function() { y += speed };

				[down, left, right, up][direction]();

			}

			function getClippedFrame(frame) {
				return [1, 2, 1, 0][frame];
			}

		</script>
	</head>
	<body>
		<canvas id="myCanvas" width="480" height="320"></canvas>
	</body>
</html>